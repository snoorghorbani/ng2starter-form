[{"__symbolic":"module","version":4,"metadata":{"TextComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"ngs-form-control-text","template":"<mat-form-field fxFlexFill [formGroup]=\"form\">      <input matInput [id]=\"schema.name\" [type]=\"schema.inputType\" [placeholder]=\"schema.title\" [formControlName]=\"schema.name\">      <mat-error *ngIf=\"form.get(schema.name).errors?.required\">     {{schema.validator.required.message}}   </mat-error>   <mat-error *ngIf=\"form.get(schema.name).errors?.minlength\">     {{schema.validator.minlength.message}}   </mat-error>   <mat-error *ngIf=\"form.get(schema.name).email?.minlength\">     {{schema.validator.email.message}}   </mat-error>   <!-- <div *ngIf=\"form.get(schema.name).invalid && (form.get(schema.name).dirty || form.get(schema.name).touched)\" class=\"alert alert-danger\">   </div> -->  </mat-form-field>","styles":[":host { \tdisplay: block; } .mat-form-field { \twidth: 100%; }"]}]}],"members":{"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":2}}]}],"schema":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor"}]}}}}]